{{TOCright}}
[[File:Pi1.JPG|thumb|alt=main image|left|250px|The Raspberry Pi]]
==Abstract==
The purpose of this project is to present logged data from the CCAT house solar panels at Humboldt State University onto a public-access website in real-time. To access the live data click here: http://www.pvoutput.org/intraday.jsp?id=31570&sid=28922

==Background==
The Campus Center for Appropriate Technologies ([[CCAT]]) house at Humboldt State University in Arcata, California has a variety of solar-powered projects on site.
Our [[Engr305 Appropriate Technology]] project for the Spring 2014 semester is to provide [[CCAT]] with a solar energy monitoring system, which will upload the voltage, watts, kWh's, and display this information on the [http://www.ccathsu.com/pv CCAT website].
[[CCAT]] has asked that we create a real-time energy monitoring system that can store logged energy generation data from the PV panels, and can also graphically present the data on the world-wide-web in an easy-to--read manner. The information that has been tracked by these PV panels can be used by science or engineering students at HSU to analyze, and also to show the world how [[CCAT]] is making use of 10+ year-old solar panels, and the efficiency of the appropriate technologies. 
{{gallery
|width=220
|height=175
|lines=3
|Image:CCAT solar panel PV 2014.JPG|Solar Panel powering the [[CCAT]] house, located on the rooftop of the main house
|Image:CCATroofpanels.JPG|Solar Panels on the Rooftop of the [[CCAT]] house
}}

==Problem statement==
The objective of this project is to develop a data monitoring system to capture the electricity generation from the photovoltaic panels located on the rooftop of the [[CCAT]] house at Humboldt State University and display the data online in kWh's. This will be accomplished by researching and determining the best software and hardware to install, allowing [[CCAT]] officials to store the solar power data and access it at any time. Ideally, with open-source software and affordable hardware that will allow any one to access the information online. The data will be displayed on the [http://www.ccathsu.com/ CCAT website]in easy-to-read graphs and will continuously log the data throughout the lifetime of the system using a raspberry pi mini-computer hooked up to a Magnetek Aurora inverter, and using pvoutput.org to store the data on their servers, free of charge.
===Criteria===
The goal of this project is to install PV monitoring hardware and software at the [[CCAT]] house located at Humboldt State University. The data must be uploaded to the [http://www.ccathsu.com/ CCAT website] and be available 24/7 to anyone interested.

{| class="wikitable sortable"
|-
! Criteria
!
! Weight <br>(1-10)
|-
| Accessibility
| Solar data from CCAT must be streamed online in kWh, and must be accessible to any one online
| <center>10</center>
|-
| Education Factor
| Historically logged data must be easily accessible and formatted in such a way that students can use the data for future projects, assessments, etc.
| <center>10</center>
|-
| Low maintenance
| Solar controls must automatically upload information to the CCAT or Appropedia website to display logged solar data
| <center>9</center>
|-
| Budget
| Must not exceed budget of $1,000
| <center>9</center>
|-
| Real time data
| Data must be graphically represented on the CCAT or Appropedia website, and updated at least twice per day, and at most, in real-time
| <center>8</center>
|-
| Ease of use
| Graphical representations of data must be easy to follow, and software must be easy for CCAT co-directors to navigate, if necessary
| <center>7</center>
|-
| Aesthetics
| Graphs must be pleasing to the eye, look professional, and be easy to read
|<center>5</center>
|-
|}

==Literature Review==
Many [[Residential Solar Data Collection and Monitoring]] design options were reviewed during the research and development process.

===Electronic Data Logging===
This general term is defined as an electronic device that records data over time. It can be built-in to a system to receive readings off of a sensor or directly from the data source. Small processors that collect the data, utilize computer software, and display the data with either a direct LCD screen or transfer the data to an alternative storage device, such as the world-wide-web. One of the primary benefits of using a data logger is the ability to collect live data automatically in real-time, continuously throughout the day. Once activated, data loggers do not require human maintenance; they can be left unattended and continue to successfully log information. <ref>{{cite web
|url=http://www.wikipedia.org/data_logger
|title=Data Logger
|publisher=Wikipedia
|year=2014
|accessdate=2014-05-10}}</ref>

===Solar Photovoltaic Panels===
Solar cells, also called photovaoltaic (PV) cells, take light photon energy and convert it into voltage, creating electrical current. PV cells are made out of a semi-conductive material, mainly Silicon, and capture excited electrons, allowing them to flow through conductive materials. The typical solar PV panel contains about 40 cells, and each home contains about 8-15 PV panels to meet the electricity demand of the average residential home.
<ref>{{cite web
|url=http://www.nrel.gov/learning/re_photovoltaics.html
|title=Learning About Renewable Energy
|publisher=NREL
|year=2012
|accessdate=2014-05-10}}</ref>

===Energy===
Energy, in this case, is the rate of fuel, electricity, or sunlight that is used or created over a period of time. 

====Energy Units====
*Watt (W) -A Watt is a unit of power, equal to energy generated or used. It is equal to one Joule per second.
*KiloWatt (kW) -A kW is a unit of power, equal to 1,000 Watts. This is the scale of power that a residential PV system will generate. If you think of this in terms of traveling in your car, a kW would be your instantaneous speed at that specific time, or the average speed of your car while driving to work. 
*KiloWatt Hour (kWh) -A kWh is a unit of energy. It is equivalent to 1,000 Watts used for a 1-hour period of time. This measurement is usually found on home energy bills. If you think of miles traveled in a car, energy (kWh) is equivalent to the miles per hour, or distance over time. In terms of PV systems, energy is the amount of sunlight hitting a solar panel over a period of time. <ref>{{cite web
|url=http://www.energylens.com/articles/kw-and-kwh
|title=kW and kWh Explained
|publisher=Bizee
|year=2014
|accessdate=2014-05-10}}</ref>

===Raspberry Pi===
The [[Raspberry Pi]] is a wallet-sized computer that was developed in the UK as a tool for children to learn computer programming. It is compatible with many operating systems such as Python, Raspbian, Linux, and many more for the beginner to advanced level computer programmer. You can run word processing and spreadsheets just like a laptop computer, as well as watch High Definintion television through its' HDMI port and audio outputs. It is not limited by its physical components, as you can solder other parts to the device, and connect through its' 26 dedicated GPIO pins, which can be infinitely expanded upon. <ref>{{cite web
|url=http://www.raspberrypi.org
|title=Raspberry Pi
|publisher=Raspberry Pi Foundation
|year=
|accessdate=2014-05-10}}</ref>
[[File:Raspberry Pi.png|right|300px]]

===Operating System===
When using a device such as a [[Raspberry Pi]], it is necessary to assign it an operating system. An operating system is the most vital program that runs on a computer. It is responsible for managing tasks and programs, which your computer relies on to function. [[Raspberry Pi]] computers rely on Operating System Image Software, and they can operate on a wide variety of images.

====Linux====
Linux is a combination of Graphical User Interface (GUI) and the traditional Command Line Interface. Running Linux allows you to directly send commands from the keyboard to the operating system through a terminal. It was originally developed as, and is, and open-source software.<ref>{{cite web
|url=http://www.linuxcommand.org
|title=What is "The Shell"
|publisher=Linux
|year=2014
|accessdate=2014-05-10}}</ref>

===NOOBS===
NOOBS stands for the New Out Of Box Software. It is a package that allows you to pick from a variety of operating systems and allows you to edit their configuration settings. It allows you to switch from different operating systems, and upon inital startup, presents a windows-like desktop experience. NOOBS allows new users to easily navigate throughout the Start menu, Operating System Images, and Internet to program the Raspberry Pi for any application you like.<ref>{{cite web
|url=http://www.raspberrypi.org/Introducing-the-new-out-of-the-box-software-noobs
|title=Raspberry Pi
|publisher=Raspberry Pi Foundation, Liz Upton
|year=2013
|accessdate=2014-05-10}}</ref>

===Open-Source Software===
Open-source software is computer software that can be written, shared, distributed and freely edited by any one with no restrictions. Open-source software relies on individual creation and user input for a variety of computer programs and applications. An excellent resource for open-source energy monitoring projects is: [http://www.openenergymonitor.com Openenergymonitor.com].

==Current PV System==
[[File:CCATPV2014.png|400px|thumb|right|''For more information on the [CCAT] PV System as of 2014, visit the updated [[CCAT_PV_system|CCAT Appropedia page]] .'']] <br />
Currently, the [[CCAT]]  house has 8 PV panels on the rooftop of the main house. These panels are the same ones that were generously donated by ASE Americas back in 2001, and remounted onto the rooftop when [[CCAT]]  moved locations in 2008. The Inverter Currently Installed at [[CCAT]] is a Magnetek Aurora 3600-US-OUT. The company Magnetek has since been bought by Power-One. The [http://www.power-one.com/sites/power-one.com/files/documents/renewable-energy/tech-manual/manual_installation_pvi-3600-us.pdf Power-One Aurora 3600-US-OUT installation manual can be found here]. The Wiring diagram to the right is from 2014, and is an accurate record of the current system.

<br />
The 8 solar panels on the rooftop are wired together in 2 strings of 4, mainly because the panels were previously hooked up to two separate inverters. Since there is only one inverter, both strings of the 4 solar panels had to be wired together in series, and hooked up to the one updated inverter through the "PV Input 1" port on the Magnetek Aurora inverter. Instead of re-wiring the panels on the rooftop when replacing the two old inverters with the most current Magnetek Aurora inverter, Solar Roger, the local solar electrician/installer, decided to just splice these wires together. This way, the 2 strings of 4 solar panels wired separately on the rooftop are merged together in series, into one continuous string, connected to the input of the one Magnetek Aurora inverter.

The current [[CCAT]] Photovoltaic system is shown below through images of the DC disconnect box, the box of wires below the inverter, and the Magnetek Aurora inverter. <br />

{{gallery
|width=180
|height=135
|lines=4
|File:CCAT PV Wiring Photo of DC disconnect box-rotated.jpg|DC disconnect box. DISCLAIMER: Be sure to switch the disconnect into the OFF position BEFORE touching any of these components.
|File:CCAT PV Wiring Photo of box below inverter.jpg|This image shows the PV systems' external wire box in the downstairs storage closet of the [[CCAT]] house: the red and white tape, joining the black and white wires are the location where these 2 strings of 4 panels, wired in parallel, became one string of 8 solar panels, wired in series.
|File:CCAT PV Wiring Photo of Inverter side view.jpg|Side view of the Magnetek Aurora Inverter, with the cover removed. DISCLAIMER: Only a Professional Electrician can remove the cover and touch these components, as they contain extremely high voltage.
}}

==Construction==

===Time Table of Tasks===
Timeline:
{| border="1" cellspacing="0" cellpadding="2" align="center"
! Task !! Week completed
|-
|Research || Week 07, Friday, 03/07/14
|-
|Shopping || Week 08, Friday, 03/14/14
|-
|Learning Raspberry Pi || Week 10, Friday, 03/28/14
|-
|Programming microSD card for Raspberry Pi || Week 13, Friday, 04/18/14
|-
|Installation and Testing || Week 15, Friday, 05/02/14
|-
|Create YouTube Video || Week 16, Friday, 05/09/14
|-
|Finalize Appropedia page || Week 16, Friday, 05/09/14
|-
|Showcase final product to CCAT and ENGR 305 class || Week 17, Monday, 05/12/14
|-
| align="left" |'''Project Completed''' || '''Friday, May 16, 2014'''
|}

===Costs===
Table of costs:
{| class="wikitable sortable"
! Quantity !! Material !! Source !! Cost ($) !! Total ($)
|-
| 1 || Raspberry Pi || [http://www.amazon.com/dp/B009SQQF9C/ref=pe_385040_30332200_pe_309540_26725410_item Amazon.Com- Raspberry Pi ](free shipping)
|align="right"| 39.00 
|align="right"| 39.00  
|- 
| 1 || Raspberry Pi Case || [http://www.amazon.com/dp/B008TCUXLW/ref=pe_385040_30332200_pe_309540_26725410_item Amazon.com- Raspberry Pi Case ](free shipping)
|align="right"| 9.00 
|align="right"| 9.00
|- 
| 1 || RS485 to USB cable || [http://www.mouser.com/Search/ProductDetail.aspx?R=USB-RS485-WE-5000-BTvirtualkey62130000virtualkey895-USBRS485WE5000BT Mouser.com ] 
|align="right"|  42.50 +shipping
|align="right"| 49.49
|- 
| 1 || Micro USB to USB power cable || RadioShack
|align="right"| 21.64
|align="right"| 21.64
|- 
| 1 || 5V USB Power Adapter || [http://www.ebay.com/itm/100-240V-US-Plug-5V-1A-2-1A-Dual-USB-Home-Wall-Charger-Power-Adapter-for-iphone-/390729423973 ebay.com- USB power adapter ]
|align="right"| 5.00
|align="right"| Donated
|- 
| 1 || Ethernet cable 25' || HSU Information Technology Services
|align="right"| 20.00
|align="right"| Donated
|- 
| 1 || SD Card 8GB || [http://www.bestbuy.com/site/pny-8gb-secure-digital-high-capacity-sdhc-class-6-memory-card/2300569.p?id=1218319596826&skuId=2300569&ref=06&loc=01&ci_src=14110944&ci_sku=2300569&extensionType=pla:g&s_kwcid=PTC!pla!!!50577228039!g!!43604681799&kpid=2300569&k_clickid=5e0a5f9e-4a07-2f08-522a-00001e29c244 Best Buy]
|align="right"| 10.00
|align="right"| Donated
|- 
| 1 || HDMI to HDMI cable (used for set-up)|| [http://www.amazon.com/AmazonBasics-High-Speed-HDMI-Cable-Meters/dp/B003L1ZYYW/ref=sr_1_5?s=electronics&ie=UTF8&qid=1399686866&sr=1-5 Amazon.com]
|align="right"| 10.00
|align="right"| Donated
|- 
| 1 || HDMI compatible monitor (used for set-up)|| [http://www.newegg.com/Product/Product.aspx?Item=N82E16824009551&nm_mc=KNC-GoogleAdwords&cm_mmc=KNC-GoogleAdwords-_-pla-_-LCD+%2f+LED+Monitors-_-N82E16824009551&ef_id=Unw5aQAAAf9gA5A@:20140510015514:s Newegg.com]
|align="right"| 100.00
|align="right"| Donated
|- 
| 1 || Computer Mouse (used for set-up)|| [http://www.cdw.com/shop/products/Logitech-Mouse-M100/2074249.aspx?cm_cat=GoogleBase&cm_ite=2074249&cm_pla=NA-NA-LOG_MT&cm_ven=ShoppingFeeds&ef_id=Unw5aQAAAf9gA5A@:20140510015555:s&gclid=CPOTkp6goL4CFUVbfgodFoAASA CDW.com]
|align="right"| 10.00
|align="right"| Donated
|- 
| 1 || Keyboard (used for set-up)|| [http://www.monoprice.com/Product?seq=1&format=2&p_id=9276&CAWELAID=1384859721&CAGPSPN=pla&catargetid=320013720000010641&cadevice=c&gclid=CKfws7ygoL4CFY17fgodegcAtA Monoprice.com]
|align="right"| 10.00
|align="right"| Donated
|- 
|-class="sortbottom"
|colspan="4" align="right" | '''Total Cost''' 
|align="right"| '''$119.13''' 
|}

==Operation==
====Maintenance====
The brilliant part about the [[Raspberry Pi]] is that once it is programmed and set up initially by this project team, there is no need for any future tinkering with the device or its' components. [[CCAT]] Co-Directors can simply log onto the internet and view the live-stream energy data from the website. The [[Raspberry Pi]] itself is stored in the downstairs storage closet next to the inverter. As long as the power is plugged in, the device will need no maintenance.

==Project Design==
The cheapest, most versatile option for this design is to connect directly to the inverter through its' RS485 connection. Currently, the Magnetek Aurora inverter has data logging capabilities and can translate that data to Aurora Monitoring software. That monitoring software presents the electricity generation data graphically in real-time, but it is bound to a local computer only. Using a [[Raspberry Pi]], this data can be sent to the internet using open-source codes.
[[File:Ccaatpvdesgn.png|thumb|upright=2.0|right|CCAT PV Monitoring Design using the [[Raspberry Pi]] hooked up directly to the Aurora Inverter via RS485 connection. The keyboard, mouse, and monitor are only needed for initial setup and programming.]]
===Components===
This design incorporates a [[Raspberry Pi]], a USB to RS485 cable, an ethernet cable, microUSB power cord, and a MicroSD card. 

The RS485 to USB cable transfers the logged data from the Magnetek Aurora inverter to the [[Raspberry Pi]]. The [[Raspberry Pi]] is a small computer that requires an SD card encoded with an operating system; we used Raspbian with an 8GB SD card. The SD card that runs Raspbian is also encoded with [http://auroramonitor.sourceforge.net/ Aurora open source forge software] that displays the inverters' logged solar power data online. It is sent through the Raspberry Pi network plug to the Local Area Network (LAN) connection located in the [[CCAT]] house. Eventually, we will have HSU's Telecommunications crew install a LAN connection in the downstairs storage closet where the inverter and [[Raspberry Pi]] will reside.

<br />

Once the data from the inverter is sent to the internet via LAN, open-source software translates the Aurora monitoring data onto a website called [http://pvoutput.org/list.jsp?userid=31570 PVoutput.org]. This website graphically shows how much electricity is being generated by [[CCAT]]'s PV system in 5-minute intervals.<br />

This design option costs no more than $100 to implement, and is an excellent demonstration of the abilities of open-source software to provide a community with PV data monitoring. 
<br />

===Replication===
For those of you who wish to replicate this project:<br />
''This hardware is ideal for a multitude of projects, ranging from programming robots, to data collection. This software is specifically meant for this Aurora inverter, and will not benefit any other projects, unless they are running Aurora Monitoring software directly through an Aurora inverter. For replications of this project with other inverters, research will be necessary to find the right open-source software for your needs.'' 
<br />

==Project goals==
Our goals:
# Learn about the [[CCAT PV system]]
# Research the best monitoring design for this system
# Learn about the [[Raspberry Pi]] and the Raspbian operating system
# Research and determine the best open-source software for the [[Raspberry Pi]]
# Learn how to program the [[Raspberry Pi]] with open-source software
# Get project idea approved by Information Technology Services (ITS) at Humboldt State University
# Get project approved by [[CCAT]] Co-Directors, [[CCAT]] Key Advisor, and HSU's Director of Sustainability
# Get the kWh data from the Aurora Inverter to the world-wide-web
# Embed the Aurora Monitoring Program code onto the [http://www.ccathsu.com CCAT website]

==Instructions==
We used a Mac Computer with an OS X Operating system for all the following steps.

===Part 1: Installing NOOBS Software onto SD Card Software===

If you are starting from scratch, follow these instructions to install NOOBS onto your 8GB or larger SD card. 

However, to save 40 minutes of your time, it is highly recommended to purchase a pre-loaded SD card from a trusted online distributor, such as [http://www.amazon.com/Raspberry-Pi-Preloaded-NOOBS-Card/dp/B00ENPQ1GK Amazon.com]. 

If you are starting with a pre-loaded NOOBS SD Card, skip to ''Part 2'' below.

{{How to
 |title=How to Format your SD Card and Install NOOBS
 |File:Reach-out92.jpg |Reach Out |1 |Reach out to as many people as possible in the cyber project community via [http://openenergymonitor.org/emon/node/5030#comment-20953 forums], [http://www.raspberry-projects.com/pi/programming-in-c/uart-serial-port/using-the-uart raspberry pi project websites], and open source community blogs.
 |File:Screen shot 2014-04-22 at 6.46.39 PM.png |SDcard.org screenshot of Formatter 4.0 |2 |Get 8 GB SD card, and delete all files by downloading the formatter: Go to the SDcard.org website->downloads->SD card formatter 4.0 (for Mac)
 |File:Screen shot 2014-04-22 at 6.49.05 PM.png |Formatter 4.0 running on SD card |3 |Open SD card formatter, select the SD card you want to overwrite, use the overwrite format option, and click format to begin. This step can take about 15 minutes.
 |File:Screen shot 2014-04-22 at 6.53.33 PM.png |Raspberry Pi NOOBS Download |4 |Download NOOBS zipfile v.1.3.4 from [http://www.raspberrypi.org/downloads Raspberry Pi website]. This step can take about 30 minutes to download the 1.3GB file.
 |File:Screen shot 2014-04-22 at 6.59.20 PM.png |Writing NOOBS files onto SD card |5 |Once NOOBS has completely downloaded, unzip files and copy and paste all NOOBS files from the directory onto the formatted SD card. This step can take about 6 minutes to complete.
 |File:Setup.JPG |Our design setup for programming the Raspberry Pi |6 |Take SD card out of the laptop slot, and insert it into the Raspberry Pi SD card slot. Then, connect the Raspberry Pi to a monitor through the HDMI port, a keyboard through the USB port, and a mouse through the other USB port. Finally, plug the Raspberry Pi into the power source through the microUSB port to a USB adapter, into the wall outlet.
 |File:PiDesktop-300x157.jpg |Raspbian Desktop |7 |This screen means the installation of Raspbian was successful!
 |File:Screen shot 2014-05-09 at 10.52.25 PM.png|Instructional NOOBS Installation Video|8 |The Raspberry Pi configuration of Part 1 is thoroughly outlined in [http://www.raspberrypi.org/help/noobs-setup/ this video by Raspberrypi.org]. Please refer to these video instructions to ensure you are on the right track, and to configure a few settings on the Raspberry Pi at initial setup. Once you complete the video's instructions, move on to Part 2 below.
}}

===Part 2: Installing [http://auroramonitor.sourceforge.net SourceForge.net] Aurora Monitor to the SD Card===

{{How to 
 |title=How to Install Aurora Monitoring Open-Source Software Onto SD Card
 |File:PiDesktop-300x157.jpg |Successful if seen |1 |If this screen is seen on first set-up, the installation of NOOBS on your SD card was successful! Now let's move forward.
 |||2 |If you purchased a pre-installed NOOBS SD Card, insert it into your computer now and move to the next step. Otherwise, If you are continuing from Part 2, unplug the power source to your Raspberry Pi, remove the SD card, and Insert SD Card into your computer.
 |File:Screen shot 2014-05-09 at 9.02.56 PM.png|Download|3 |Open your computers internet browser and go to
'''[http://auroramonitor.sourceforge.net http://auroramonitor.sourceforge.net]'''
Click the 'download' link for version 1.07
 |File:Screen shot 2014-04-27 at 11.33.11 PM.png|SourceForge project page screen shot|11 |You will be directed to the SourceForge project website, click on the auroramon-1.07.zip to start the download process. Click the 'Save As' button when the option appears and save it to your SD Card.
 |||12}Safely remove SD card from computer.
}}

===Part 3: Raspberry Pi Hardware Setup===
{{How to
 |title=How do I set-up the Raspberry Pi Hardware?
 |File:Pi2.JPG |Raspberry Pi out of the box |1 |Admire this amazing 512MB Raspberry Pi Model B Revision 2.0 mini-computer that's going to change the world!
 |File:Pi case.JPG |Raspberry Pi protective case |2 |Purchase a case to protect the Raspberry Pi.
 |File:Pi in case.JPG |Protected Raspberry Pi |3 |Put the Raspberry Pi into the protective case. Now you're ready to put it to work!
 |||4|Insert SD card (which was programmed with NOOBS in the steps above or purchased with NOOBS already installed)
 |||5|Connect HDMI cable to Raspberry Pi and Monitor
 |||6|Connect a USB hub (with two USB ports into one USB connection) into the Raspberry Pi
 |||6|Connect USB Mouse to hub
 |||7|Connect USB Keyboard to hub
 |||8|Connect Ethernet cable from router to Raspberry Pi
 |||9|Finally, connect the microUSB power cord from the Raspberry Pi to the wall outlet ('''This should always be the last connection made.''')
 |File:Screen shot 2014-05-09 at 8.12.36 PM.png |First Start-up of Raspberry Pi |12 |First start-up screen when power is connected.
}}

===Part 4: Formatting Raspberry Pi===
After each 
 command line
hit '''ENTER''' on the keyboard to complete each command.

{{How to
 |title=How to format your Raspberry Pi with fully loaded SD card
 |File:Lxterminal.png |LXTerminal |1 |Open LXTerminal window on the Raspberry Pi Desktop.
 |||2 |Type the following command to change the directory
 cd ./auroramon-1.07/src
 |File:Screen shot 2014-05-09 at 9.23.43 PM.png|Once this step is completed, your screen should mimic this photo|3 |Then, compile the source code by typing
 sudo make
 |||4 |To make sure everything is going as planned, check your directory by
 ls
 |File:Screen shot 2014-05-09 at 9.38.03 PM.png|Once this step is completed, your screen should mimic this photo|5 |To list everything in the Pi directory
 pi
 |||6 |The 2 previous commands will list all files in the folder. We already have zip tools installed from Raspbian, so it's now time to unzip the Aurora Monitor Software from the SD card.
 unzip ./auroramon-1.07.zip
 |File:Screen shot 2014-05-09 at 9.46.49 PM.png|Once this step is completed, your screen should mimic this photo|7 |You should see some text scroll on the screen now. Type
 ls-al
to see a new list of all files in the folder. You should see a new directory with the same named '''unzip ./auroramon-1.07''' (notice this new name is without the .zip extension)
 |File:Screen shot 2014-05-09 at 10.26.36 PM.png|CONGRATULATIONS! If you see this screen, you have successfully installed and run the Aurora Monitor Program!|8 |Now, you are ready to test the Aurora Monitor software.
 ./auroramon
If this does not work for you, reboot system by typing: ''sudo reboot'' and try again, making sure to remain in the '''auroramon/src''' directory.
 |||9 |Next, we need to set an Autostart directory folder that will store the code that forces the Aurora Monitor to display at startup of the Raspberry Pi.
 mkdir ~/.config/autostart
 |||10 |Configure Aurora Monitor to start at reboot
 sudo cp auroramon /usr/local/bin
 |||11 |
 cd ~/.config/autostart
 |||12 |
 sudo nano ./auroramon.desktop
 |File:Screen shot 2014-04-28 at 12.09.16 AM.png||26 |Type the code (pictured left). Save the file by pressing 'CTRL'+'X', and then 'Y' to confirm the save. Finally, press 'Enter' to confirm the filename '''auroramon.desktop'''
 |||13 |Lastly, reboot to ensure all systems are good to go
 sudo reboot
}}

===Part 5: Configure Aurora Monitor Settings===

{{How to
 |title=How to Finalize Raspberry Pi Aurora Monitor Software
 |||1 |Refer to [http://www.appropedia.org/images/8/86/Part_5_Configure_Aurora_Monitor_Settings.pdf this PDF] for complete Part 5 instructions, generously provided by open-source documents.
 |||2 |Properly "Shutdown" the Raspberry Pi and unplug the power source
 |File:Screen shot 2014-04-21 at 8.16.20 PM.png |USB-RS485-WE-5000-BT |3 |Use wiring diagram in Section 5.1 of the [http://www.ftdichip.com/Support/Documents/DataSheets/Cables/DS_USB_RS485_CABLES.pdf USB-RS485 support documents] to determine which color wire connects to which port on the Aurora Inverter.
 |File:USB-RS485 to pi.JPG |USB-RS485-WE-5000-BT |4 |Plug the USB plug of the RS485-to-USB connector into the USB port on the Raspberry Pi.
 |||5 |Plug in Raspberry Pi to the power source after connected to the inverter.
 | File:Screen shot 2014-05-09 at 11.22.46 PM.png|Congratulations!|6|Congratulations! You now have live streaming data onto your monitor!
}}

==Conclusion==

===Testing Results===
The testing was all done after our programming was initially proven successful. Therefore, the results of our physical testing were successful.
Programming the [[Raspberry Pi]] was broken up into 3 separate working sessions.
The first part of testing went well up to the point of programming the SD card with the Raspbian image and Aurora Monitor sourceforge.net software. 

The second part required minor adjustments to the open-source instructions to best fit our project needs. We received help from Roger Tuan, a former [[CCAT]] Co-Director, to make sure we were on the right track with changing the codes. The code changes included: setting up an IP address for the [[Raspberry Pi]] as well as filtering out a couple type-o's in the open-source code. 

The third round of testing was a dry run hooking up the inverter to the [[Raspberry Pi]] and the LAN connection. We had to work with Telecom to get a MAC address of the Raspberry Pi approved before being able to connect to the Humboldt State University network.  We also had to set a temporary IP address for internet connection to the [[Raspberry Pi]] because at this time it does not have its' own LAN connection in the [[CCAT]] house, it is just borrowing a LAN connection from the [[CCAT]] library computer.

We drafted a test page for the [[CCAT]] website, with the help of Roger Tuan, embedding the pvoutput.org graphs onto a /PV link on ccathsu.com.

After all testing was completed, the project is deemed successful. It was initially tested in April, 2014. Since then, the CCAT LAN line has been permanently connected for the Raspberry Pi to permanently link to the internet. As of December, 2014, the results are continuously streamed live on the pvoutput.org website: [http://pvoutput.org/list.jsp?userid=31570 pvoutput.org user id=31570] and the [http://www.ccathsu.com/pv ccathsu.com/pv] website.

The world wide web now streams real-time data displaying the Watts, Volts, Amps, kW, and kWh data. The data is updated onto the pvoutput.org website from the inverter every 5 minutes.

The image below is a screenshot of the PVoutput.org website, up and runnin in April, 2014.

[[File:Screen shot 2014-05-11 at 9.19.55 PM.png|400px]]

===Discussion===

With 3 design changes, we learned a lot about the University requirements, the [[CCAT PV system]], and how many different software programs and components work together to log energy generation data and monitor that data online.

{{#widget:YouTube|id=j4kRFDOGWhM}}

===Lessons Learned===
*Do your own research, and reach out as much as possible to multiple people from different social layers within the community.
*It would have been nice to purchase an SD card that was pre-installed with the NOOBS software, as it was the same cost of a normal 8GB SD card, and it saved a lot of time and effort.
*To avoid dependency on corporations, go directly to open-source software in the beginning stages of a project such as this. Open forums are surprisingly informative, and the writers and users are eager to help, especially if it means talking about their own projects!
*ITS at HSU requires approval for any wireless router to be installed on campus. If the frequency of the wireless signal is 2.4 Ghz or between 5.0 to 5.7 Ghz, the request will automatically be denied, as it will interfere with the IT system on campus. Most of the wireless routers we found to transfer local data information to a web server were around 433 Mhz, like the [http://efergy.com/eu/comparison/ Efergy Energy Monitor] for example, and are "good to go", according to ITS.

===Troubleshooting===
For any issues with the above instructions, programming the [[Raspberry Pi]], or experiences with glitches in the [[CCAT]] system in the future, please refer to the following:

*This website was used to download the Aurora Monitor software that is displayed through the [[Raspberry Pi]] to a local monitor on-site.
[http://auroramonitor.sourceforge.net/ Aurora open-source-forge website]
*This website was used to follow instructions for the bulk of our project. We did change a few details such as: omitted most of Part 2 and this project used a wired connection instead of Wi-Fi.
[http://www.monkeysandgorillas.com/index.php/2013/10/24/raspberry-pi-setup-to-monitor-aurora-pvi-5000-solar-inverter-part-3/ Project Page: Open Source Hardware and Software Resource for Aurora Monitor, Raspberry Pi, and PVoutput.org Setup]
*Contact Us!

====December, 2014 Updates====
The pvoutput.org website was not receiving data from the inverter through the Raspberry Pi since May, 2014. To troubleshoot, we did the following:

If the data is not updating to the website, KEEP EVERYTHING PLUGGED INTO THE RASPBERRY PI, especially the SD card. <br />
1. Plug a USB hub into the one open USB slot on the Raspberry Pi. This will be used to connect a keyboard and a mouse to the Raspberry Pi.<br />
2. Plug in a monitor to the open HDMI slot on the Raspberry Pi, using a male-to-male HDMI cable.<br />
3. Turn on the monitor, and the Aurora program should appear automatically at start-up.<br />
4. On the Aurora screen, navigate to SETTINGS -> PVOUTPUT.ORG, and click to open.<br />
5. Check that the API and System ID are filled in. (In our case, they were blank, so we had to fill them in again.)<br />
6. On a separate computer, go to the www.pvoutput.org website, login to the ccathsu account (login info is written on the Raspberry Pi project box in the CCAT downstairs closet plastic bin, labeled "Ribbons")<br />
7. Navigate to SETTINGS<br />
8. At the bottom of the page, you will see a section titled API SETTINGS<br />
9. Copy the API KEY and the SYSTEM ID, and input them into the Aurora PVOUTPUT.ORG screen from Step 4 in the respective fields.<br />
10. Additionally, under the API SETTINGS section from Step 8, click on the HELP button to the right of API ACCESS<br />
11. Scroll down the HELP page for various SERVICE URL's to input into the Aurora PVOUTPUT.ORG screen from Step 4. We used pvoutput.org/service/r2<br />
12. Wait until the sun is shining, and check the pvoutput.org website from a computer to check the data is uploading correctly.<br />

==Update October 2016==
As of October 2016, the last upload from the Raspberry Pi data logger to the pvoutput.org website occurred on March 14, 2016. This is due to technical difficulties with the ethernet port connection. The ethernet port being used did not meet operating standards within the IT department at HSU, and the data logger had to be unplugged. CCAT staff are currently working to have a new, fully functioning ethernet port installed in the CCAT main house, in order to get the data logger up and running again. Up until having to be unplugged, the data logger had been operating successfully and restoring the system will be as simple as plugging the Raspberry Pi device back in to its respective ports.

==References==
{{Reflist}}

==Contact details==
*[[User:Nrc190|Nicholas Colbrunn]] - nrc190@humboldt.edu
*[[User:Jbader|Jenna Bader]] - jlb272@humboldt.edu


[[Category:Engr305 Appropriate Technology]]
[[Category:CCAT]]
[[Category:Solar power]]
[[Category:CCAT active project]]